{"ast":null,"code":"import _classCallCheck from\"/Users/scholz/fiap-react/dnd-example/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/scholz/fiap-react/dnd-example/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/scholz/fiap-react/dnd-example/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/scholz/fiap-react/dnd-example/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/scholz/fiap-react/dnd-example/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'./AddTaskForm.css';var AddTaskForm=/*#__PURE__*/function(_React$Component){_inherits(AddTaskForm,_React$Component);function AddTaskForm(props){var _this;_classCallCheck(this,AddTaskForm);_this=_possibleConstructorReturn(this,_getPrototypeOf(AddTaskForm).call(this,props));_this.state={editing:false};return _this;}_createClass(AddTaskForm,[{key:\"onSubmit\",value:function onSubmit(event){event.preventDefault();var taskText=this.textInput.value.trim();var listNumber=this.props.formNum;console.log(listNumber);if(taskText&&this.props.onAdd){this.props.onAdd(taskText,listNumber);}this.textInput.value='';}},{key:\"setEditing\",value:function setEditing(editing){this.setState({editing:editing});}},{key:\"render\",value:function render(){var _this2=this;if(!this.state.editing){return React.createElement(\"div\",{className:\"open-add-button\",onClick:function onClick(){return _this2.setEditing(true);}},React.createElement(\"a\",{href:\"#\"},\"Add a task!\"));}return React.createElement(\"form\",{className:\"card add-task-form\",onSubmit:function onSubmit(e){return _this2.onSubmit(e);}},React.createElement(\"input\",{type:\"text\",class:\"task-input\",ref:function ref(input){return _this2.textInput=input;},\"aria-label\":\"Add a task\"}),React.createElement(\"div\",null,React.createElement(\"button\",{className:\"button add-button\"},\"Add Task\"),React.createElement(\"button\",{className:\"button cancel-button\",onClick:function onClick(){return _this2.setEditing(false);}},\"Cancel\")));}}]);return AddTaskForm;}(React.Component);export{AddTaskForm as default};","map":{"version":3,"sources":["/Users/scholz/fiap-react/dnd-example/src/AddTaskForm.js"],"names":["React","AddTaskForm","props","state","editing","event","preventDefault","taskText","textInput","value","trim","listNumber","formNum","console","log","onAdd","setState","setEditing","e","onSubmit","input","Component"],"mappings":"imBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,mBAAP,C,GAEqBC,CAAAA,W,iFACnB,qBAAYC,KAAZ,CAAmB,6CACjB,6EAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACXC,OAAO,CAAE,KADE,CAAb,CAFiB,aAKlB,C,kEAEQC,K,CAAO,CACdA,KAAK,CAACC,cAAN,GACA,GAAMC,CAAAA,QAAQ,CAAG,KAAKC,SAAL,CAAeC,KAAf,CAAqBC,IAArB,EAAjB,CACA,GAAMC,CAAAA,UAAU,CAAG,KAAKT,KAAL,CAAWU,OAA9B,CACAC,OAAO,CAACC,GAAR,CAAYH,UAAZ,EACA,GAAIJ,QAAQ,EAAI,KAAKL,KAAL,CAAWa,KAA3B,CAAkC,CAChC,KAAKb,KAAL,CAAWa,KAAX,CAAiBR,QAAjB,CAA2BI,UAA3B,EACD,CACD,KAAKH,SAAL,CAAeC,KAAf,CAAuB,EAAvB,CACD,C,8CAESL,O,CAAS,CACjB,KAAKY,QAAL,CAAc,CACZZ,OAAO,CAAPA,OADY,CAAd,EAGD,C,uCAEQ,iBACP,GAAG,CAAC,KAAKD,KAAL,CAAWC,OAAf,CAAwB,CACtB,MACE,4BAAK,SAAS,CAAC,iBAAf,CAAiC,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACa,UAAL,CAAgB,IAAhB,CAAN,EAA1C,EACE,yBAAG,IAAI,CAAC,GAAR,gBADF,CADF,CAKD,CACC,MACE,6BAAM,SAAS,CAAC,oBAAhB,CAAqC,QAAQ,CAAE,kBAACC,CAAD,QAAO,CAAA,MAAI,CAACC,QAAL,CAAcD,CAAd,CAAP,EAA/C,EACE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAC,YAAzB,CAAsC,GAAG,CAAE,aAAAE,KAAK,QAAI,CAAA,MAAI,CAACZ,SAAL,CAAiBY,KAArB,EAAhD,CAA4E,aAAW,YAAvF,EADF,CAEE,+BACE,8BAAQ,SAAS,CAAC,mBAAlB,aADF,CAEE,8BAAQ,SAAS,CAAC,sBAAlB,CAAyC,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACH,UAAL,CAAgB,KAAhB,CAAN,EAAlD,WAFF,CAFF,CADF,CASH,C,yBA1CsCjB,KAAK,CAACqB,S,SAA1BpB,W","sourcesContent":["import React from 'react';\nimport './AddTaskForm.css';\n\nexport default class AddTaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false\n    }\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const taskText = this.textInput.value.trim();\n    const listNumber = this.props.formNum;\n    console.log(listNumber)\n    if (taskText && this.props.onAdd) {\n      this.props.onAdd(taskText, listNumber);\n    }\n    this.textInput.value = '';\n  }\n\n setEditing(editing) {\n    this.setState({\n      editing\n    });\n  }\n\n  render() {\n    if(!this.state.editing) {\n      return (\n        <div className=\"open-add-button\" onClick={() => this.setEditing(true)}>\n          <a href=\"#\">Add a task!</a>\n        </div>  \n        ); \n    }\n      return (\n        <form className=\"card add-task-form\" onSubmit={(e) => this.onSubmit(e)}>\n          <input type=\"text\" class=\"task-input\" ref={input => this.textInput = input} aria-label=\"Add a task\" />\n          <div>\n            <button className=\"button add-button\">Add Task</button>\n            <button className=\"button cancel-button\" onClick={() => this.setEditing(false)}>Cancel</button>\n          </div>\n        </form>\n      );\n  }\n}"]},"metadata":{},"sourceType":"module"}